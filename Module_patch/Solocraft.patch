From a4d4c80c2ac30ac89ff66771f7d7f6b43ffdb058 Mon Sep 17 00:00:00 2001
From: 328950225 <33200258+328950225@users.noreply.github.com>
Date: Wed, 4 Nov 2020 04:08:38 +0800
Subject: [PATCH] add Module_patch/VAS_AutoBalance_for_v201103.patch.if want
 use it , patch it self.

---
 src/server/scripts/Custom/Solocraft.cpp      | 124 +++++++++----------
 src/server/worldserver/worldserver.conf.dist |   4 +-
 2 files changed, 64 insertions(+), 64 deletions(-)

diff --git a/src/server/scripts/Custom/Solocraft.cpp b/src/server/scripts/Custom/Solocraft.cpp
index 3b6229437d..2c44a5bde9 100644
--- a/src/server/scripts/Custom/Solocraft.cpp
+++ b/src/server/scripts/Custom/Solocraft.cpp
@@ -1,4 +1,4 @@
-﻿#include <map>
+#include <map>
 
 #include "Config.h"
 #include "ScriptMgr.h"
@@ -22,48 +22,48 @@ namespace {
 class solocraft_player_instance_handler : public PlayerScript {
 public:
 	solocraft_player_instance_handler() : PlayerScript("solocraft_player_instance_handler") {
-	//	TC_LOG_INFO("scripts.solocraft.player.instance", "[Solocraft] solocraft_player_instance_handler Loaded");
+		TC_LOG_INFO("scripts.solocraft.player.instance", "[Solocraft] solocraft_player_instance_handler Loaded");
 	}
 	
-	//void OnLogin(Player *player, bool firstLogin) override {
-	//	if (sConfigMgr->GetBoolDefault("Solocraft.Enable", true))
-	//	{
-	//	ChatHandler(player->GetSession()).SendSysMessage("单人模式在团队中已激活");
-	//	}
-	//}
+	void OnLogin(Player *player, bool firstLogin) override {
+		if (sConfigMgr->GetBoolDefault("Solocraft.Enable", true))
+		{
+		ChatHandler(player->GetSession()).SendSysMessage("单人模式在团队中已激活");
+		}
+	}
 
 	void OnMapChanged(Player *player) override {
-		if (sConfigMgr->GetBoolDefault("Instance.Notice.Enable", true)) {
+		if (sConfigMgr->GetBoolDefault("Solocraft.Enable", true)) {
 		Map *map = player->GetMap();
-		/*int difficulty = CalculateDifficulty(map, player);*/
+		int difficulty = CalculateDifficulty(map, player);
 		int numInGroup = GetNumInGroup(player);
-		ApplyBuffs(player, map, numInGroup);
+		ApplyBuffs(player, map, difficulty, numInGroup);
+		}
+	}
+private:
+	std::map<ObjectGuid, int> _unitDifficulty;
+	
+	        // Get difficulty values from config
+        const uint32 D5 = sConfigMgr->GetIntDefault("Solocraft.Dungeon", 5);
+        const uint32 D10 = sConfigMgr->GetIntDefault("Solocraft.Heroic", 10);
+        const uint32 D25 = sConfigMgr->GetIntDefault("Solocraft.Raid25", 25);
+        const uint32 D40 = sConfigMgr->GetIntDefault("Solocraft.Raid40", 40);
+
+	int CalculateDifficulty(Map *map, Player *player) {
+		int difficulty = 1;
+		if (map) {
+			if (map->Is25ManRaid()) {
+				difficulty = D25;
+			} else if (map->IsHeroic()) {
+				difficulty = D10;
+			} else if (map->IsRaid()) {
+				difficulty = D40;
+			} else if (map->IsDungeon()) {
+				difficulty = D5;
+			}
 		}
+		return difficulty;
 	}
-//private:
-//	std::map<ObjectGuid, int> _unitDifficulty;
-//	
-//	        // Get difficulty values from config
-//        const uint32 D5 = sConfigMgr->GetIntDefault("Solocraft.Dungeon", 5);
-//        const uint32 D10 = sConfigMgr->GetIntDefault("Solocraft.Heroic", 10);
-//        const uint32 D25 = sConfigMgr->GetIntDefault("Solocraft.Raid25", 25);
-//        const uint32 D40 = sConfigMgr->GetIntDefault("Solocraft.Raid40", 40);
-//
-//	int CalculateDifficulty(Map *map, Player *player) {
-//		int difficulty = 1;
-//		if (map) {
-//			if (map->Is25ManRaid()) {
-//				difficulty = D25;
-//			} else if (map->IsHeroic()) {
-//				difficulty = D10;
-//			} else if (map->IsRaid()) {
-//				difficulty = D40;
-//			} else if (map->IsDungeon()) {
-//				difficulty = D5;
-//			}
-//		}
-//		return difficulty;
-//	}
 
 	int GetNumInGroup(Player *player) {
 		int numInGroup = 1;
@@ -75,40 +75,40 @@ public:
 		return numInGroup;
 	}
 
-	void ApplyBuffs(Player *player, Map *map, int numInGroup) {
-		/*ClearBuffs(player, map);*/
-		/*if (difficulty > 1) {*/
+	void ApplyBuffs(Player *player, Map *map, int difficulty, int numInGroup) {
+		ClearBuffs(player, map);
+		if (difficulty > 1) {
 			//InstanceMap *instanceMap = map->ToInstanceMap();
 			//InstanceScript *instanceScript = instanceMap->GetInstanceScript();
 
-			ChatHandler(player->GetSession()).PSendSysMessage("|cffFF8000进入 %s ( 人数 = %d)|r",
-					map->GetMapName(), numInGroup);
-
-			//_unitDifficulty[player->GetGUID()] = difficulty;
-			//for (int32 i = STAT_STRENGTH; i < MAX_STATS; ++i) {
-			//	player->ApplyStatPctModifier(UnitMods(UNIT_MOD_STAT_START + i), TOTAL_PCT, float(difficulty * 100));
-			//}
-			//player->SetFullHealth();
-			//if (player->GetPowerType() == POWER_MANA) {
-			//	player->SetPower(POWER_MANA, player->GetMaxPower(POWER_MANA));
-			//}
-		//}
+			ChatHandler(player->GetSession()).PSendSysMessage("|cffFF8000进入 %s (难度 = %d, 人数 = %d)|r",
+					map->GetMapName(), difficulty, numInGroup);
+
+			_unitDifficulty[player->GetGUID()] = difficulty;
+			for (int32 i = STAT_STRENGTH; i < MAX_STATS; ++i) {
+				player->ApplyStatPctModifier(UnitMods(UNIT_MOD_STAT_START + i), TOTAL_PCT, float(difficulty * 100));
+			}
+			player->SetFullHealth();
+			if (player->GetPowerType() == POWER_MANA) {
+				player->SetPower(POWER_MANA, player->GetMaxPower(POWER_MANA));
+			}
+		}
 	}
 
-	//void ClearBuffs(Player *player, Map *map) {
-	//	/*std::map<ObjectGuid, int>::iterator unitDifficultyIterator = _unitDifficulty.find(player->GetGUID());*/
-	//	if (unitDifficultyIterator != _unitDifficulty.end()) {
-	//		int difficulty = unitDifficultyIterator->second;
-	//		_unitDifficulty.erase(unitDifficultyIterator);
+	void ClearBuffs(Player *player, Map *map) {
+		std::map<ObjectGuid, int>::iterator unitDifficultyIterator = _unitDifficulty.find(player->GetGUID());
+		if (unitDifficultyIterator != _unitDifficulty.end()) {
+			int difficulty = unitDifficultyIterator->second;
+			_unitDifficulty.erase(unitDifficultyIterator);
 
-	//		ChatHandler(player->GetSession()).PSendSysMessage("|cffFF8000?? to %s (???? = %d)|r",
-	//				map->GetMapName(), difficulty);
+			ChatHandler(player->GetSession()).PSendSysMessage("|cffFF8000离开 to %s (难度降低 = %d)|r",
+					map->GetMapName(), difficulty);
 
-	//		/*for (int32 i = STAT_STRENGTH; i < MAX_STATS; ++i) {
-	//			player->ApplyStatPctModifier(UnitMods(UNIT_MOD_STAT_START + i), TOTAL_PCT, 100.f / (1.f + float(difficulty * 100) / 100.f) - 100.f);
-	//		}*/
-	//	}
-	//}
+			for (int32 i = STAT_STRENGTH; i < MAX_STATS; ++i) {
+				player->ApplyStatPctModifier(UnitMods(UNIT_MOD_STAT_START + i), TOTAL_PCT, 100.f / (1.f + float(difficulty * 100) / 100.f) - 100.f);
+			}
+		}
+	}
 };
 
 }
diff --git a/src/server/worldserver/worldserver.conf.dist b/src/server/worldserver/worldserver.conf.dist
index 08dd0f3d7f..bc38066939 100644
--- a/src/server/worldserver/worldserver.conf.dist
+++ b/src/server/worldserver/worldserver.conf.dist
@@ -4521,5 +4521,5 @@ NpcBot.OwnershipExpireTime = 0
 # Solocraft.Heroic = 10
 # Solocraft.Raid25 = 25
 # Solocraft.Raid40 = 40
-#玩家+npcbot进入副本数量通告
-Instance.Notice.Enable=1
\ No newline at end of file
+#玩家+npcbot进入副本数量通告.(已被单人模式替代)
+#Instance.Notice.Enable=1
\ No newline at end of file
-- 
2.26.2.windows.1


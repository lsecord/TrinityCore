name: win64/linux
on:
 push:
  
 pull_request:

      
# push:
   # tags: 
   #   - 'v*'
jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      get_version: ${{ steps.get_version.outputs.version }}
    name: Create release
    steps:
    - name: Get Version
      id: get_version
      uses: battila7/get-version-action@v2
    - run: echo ${{ steps.get_version.outputs.version }}
    - run: echo ${{ steps.get_version.outputs.version-without-v }}
      env: 
       get_version: ${{ steps.get_version.outputs.version }}
    - name: Get current time
      uses: srfrnk/current-time@master
      id: current-time
      with: 
        format: YYMMDD
    - name: Use current time
      env:
        TIME: "${{ steps.current-time.outputs.time }}"
        F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
      run: |
       echo $TIME
       echo ${{ github.ref }}
  build-windowsx86:
   # needs: [create_release]
    runs-on: windows-latest
    env:
         OPENSSL_DIR: C:\OpenSSL
         OPENSSL_VERSION: 1_1_1h
         BITS: 32
    steps:
    - name: Cache
      id: WindowsCache
      uses: actions/cache@v2.1.3
      env:
       cache-name: OpenSSL+mysql-5.7.31-win32+boost
      with:
        path: | 
             C:\OpenSSL
             C:\mysql-5.7.31-win32
             C:\boost
        key: ${{ runner.os }}-${{ env.cache-name }}-
    - name: Cache_lib
    #  if: steps.WindowsCache.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        if (Test-Path "C:\OpenSSL") {
            echo "using OpenSSL_1_1_1h from cache"
            Get-ChildItem $env:OPENSSL_DIR
        }
        else
        {
            mkdir -p C:\OpenSSL
            Invoke-WebRequest "http://slproweb.com/download/Win${env:BITS}OpenSSL-${env:OPENSSL_VERSION}.exe" -OutFile Win${env:BITS}OpenSSL-${env:OPENSSL_VERSION}.exe
            &.\Win${env:BITS}OpenSSL-${env:OPENSSL_VERSION}.exe /SILENT /VERYSILENT /SP- /DIR="C:\OpenSSL"
        }
        
        if (Test-Path "C:\mysql-5.7.31-win32") {
            echo "using mysql-5.7.31-win32 from cache"
        }
        else
        {
            echo "downloading mysql-5.7.31-win32"
            Invoke-WebRequest "https://downloads.mysql.com/archives/get/p/23/file/mysql-5.7.31-win32.zip" -OutFile mysql-5.7.31-win32.zip
            echo "installing mysql-5.7.31-win32.zip"
            7z x -y mysql-5.7.31-win32.zip -oC:\
        }
        if (Test-Path "C:\boost") {
            echo "using C:\boost from cache"
        }
        else
        {
            echo "downloading boost"
            $url64 = "https://bintray.com/boostorg/release/download_file?file_path=1.74.0%2Fbinaries%2Fboost_1_74_0-msvc-14.1-32.exe"
            $url86 = "https://bintray.com/boostorg/release/download_file?file_path=1.74.0%2Fbinaries%2Fboost_1_74_0-msvc-14.1-64.exe"
            $path = "C:\boost.exe"
            [Net.WebClient]::new().DownloadFile($url86, $path)
            Start-Process C:\boost.exe -ArgumentList "/DIR=C:\boost","/VERYSILENT" -Wait
        }
            Get-ChildItem C:\boost
            $env:INCLUDE = "C:\mysql-5.7.31-win32\include;" + $env:INCLUDE
            $env:LIB     = "C:\mysql-5.7.31-win32\lib;" + $env:LIB
            $Boost_DIR = "C:\boost"
            $env:BOOST_ROOT=$env:Boost_DIR
            Get-ChildItem C:\mysql-5.7.31-win32
            Get-ChildItem C:\OpenSSL
    - name: Checkout
      uses: actions/checkout@v2
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1

